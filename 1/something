#! /usr/bin/python
import argparse
import sys

def matrix_product(A,B):
    rowA = len(A)
    rowB = len(B)
    colA = len(A[0])
    colB = len(B[0])

    result = []
    for i in range(rowA):
        result_row = []
        for k in range(colB):
            result_row.append(0)
        result.append(result_row)

    for i in range(rowA):
        for j in range(colB):
            for k in range(colA):
                result[i][j] += A[i][k] * B[k][j]
    return result


def run(args):
    input_file = open(args.input_file)
    input_file_text = input_file.read()
    print(input_file_text)
    output_file = open(args.output_file, "w+")
    print("kjdsncdjknd", file=output_file)
    #screen_output_value = args.screen_output_value
    #screen_in_out_value = args.screen_in_out_value
    #print(screen_output_value)
    #print(screen_in_out_value)
#    qual = args.quality_score
#    f = open(args.output, "w")
#    seq = ""
#    for line in f:
#        if line[0] == ">":
#            if seq != "":
#                fout.write(seq + "\n")
#                fout.write("+\n")
#                fout.write(qual * len(seq)+"\n")
#            fout.write("@" + line[1:])
#            seq = ""
#        else:
#            seq += line.strip()
#    f.close()
#
#    fout.write(seq + "\n")
#    fout.write("+\n")
#    fout.write(qual * len(seq) + "\n")
#    fout.close()
#
def main():
    parser=argparse.ArgumentParser(description="matrix mulyiplier")
    parser.add_argument("-o",help="output file",dest="output_file",type=str,required=True)
    parser.add_argument("-f",help="input file",dest="input_file",type=str,required=True)
    #parser.add_argument("-s",help="no output on the screen",dest="screen_output_value",type=bool,default=False)
    #parser.add_argument("-v",help="input and output will be on the screen",dest="screen_in_out_value",type=bool,default=False)
    parser.set_defaults(func=run)
    args=parser.parse_args()
    args.func(args)

if __name__ == "__main__":
    main()
